/*
 *  OIL file of sample program (1).
 */

/*
 *  Including the definition part
 */
#include "implementation.oil"

/*
 *  Implementation Part
 */
CPU current {

	/*
	 *  OS definition
	 */
	OS os {
		STATUS = STANDARD;
		STARTUPHOOK = TRUE;
		ERRORHOOK = TRUE;
		SHUTDOWNHOOK = TRUE;
		PRETASKHOOK = FALSE;
		POSTTASKHOOK = FALSE;
		USEGETSERVICEID = TRUE;
		USEPARAMETERACCESS = TRUE;
		USERESSCHEDULER = TRUE;
	};

	/*
	 *  Application mode definition
	 */
	APPMODE AppMode1 {};	/* Parallel execution task not started automatically */
	APPMODE AppMode2 {};	/* Task1 Auto start mode							 */
	APPMODE AppMode3 {};	/* Task3 Auto start mode							 */

	/*
	 *  Task definition
	 */
	/* Main task	*/
	TASK MainTask {
		AUTOSTART = TRUE {
			APPMODE = AppMode1;
			APPMODE = AppMode2;
			APPMODE = AppMode3;
		};
		PRIORITY = 14;
		STACKSIZE = 0x0400;
		ACTIVATION = 1;
		SCHEDULE = NON;
		EVENT = MainEvt;
	};

	/* Highest priority task	*/
	TASK HighPriorityTask {
		AUTOSTART = FALSE;
		PRIORITY = 15;
		STACKSIZE = 0x00C0;
		ACTIVATION = 1;
		SCHEDULE = FULL;
	};

	/* Non preemptive task	*/
	TASK NonPriTask {
		AUTOSTART = FALSE;
		PRIORITY = 1;
		STACKSIZE = 0x0100;
		ACTIVATION = 8;
		SCHEDULE = NON;
	};

	/* Parallel execution Task1	*/
	TASK Task1 {
		AUTOSTART = TRUE {
			APPMODE = AppMode2;
		};
		PRIORITY = 4;
		STACKSIZE = 0x0100;
		ACTIVATION = 8;
		SCHEDULE = FULL;
		RESOURCE = TskLevelRes;
		RESOURCE = IntLevelRes;
	};

	/* Parallel execution Task2	*/
	TASK Task2 {
		AUTOSTART = FALSE;
		PRIORITY = 7;
		STACKSIZE = 0x0100;
		ACTIVATION = 1;
		SCHEDULE = FULL;
		RESOURCE = TskLevelRes;
		RESOURCE = IntLevelRes;
		EVENT = T2Evt;
	};

	/* Parallel execution Task3	*/
	TASK Task3 {
		AUTOSTART = TRUE {
			APPMODE = AppMode3;
		};
		PRIORITY = 12;
		STACKSIZE = 0x0100;
		ACTIVATION = 1;
		SCHEDULE = FULL;
		RESOURCE = IntLevelRes;
		EVENT = T3Evt;
	};

	/* Parallel execution Task4	*/
	TASK Task4 {
		AUTOSTART = FALSE;
		PRIORITY = 6;
		STACKSIZE = 0x0100;
		ACTIVATION = 5;
		SCHEDULE = FULL;
		RESOURCE = GroupRes;
		RESOURCE = TskLevelRes;
		RESOURCE = IntLevelRes;
	};

	/* Parallel execution Task5	*/
	TASK Task5 {
		AUTOSTART = FALSE;
		PRIORITY = 9;
		STACKSIZE = 0x0100;
		ACTIVATION = 5;
		SCHEDULE = FULL;
		RESOURCE = GroupRes;
		RESOURCE = TskLevelRes;
		RESOURCE = IntLevelRes;
	};

	/*
	 *  Interrupt service routine definition
	 */
	/* Serial IO error interrupt(SCI1)	*/
	ISR ErrHwSerialInt {
		CATEGORY = 1;
		ENTRY = 204;	/* SCI1 ERI1 */
		PRIORITY = 6;
	};

	/* Serial IO receive interrupt(SCI1)	*/
	ISR RxHwSerialInt {
		CATEGORY = 1;
		ENTRY = 205;	/* SCI1 RXI1 */
		PRIORITY = 6;
	};

	/* HW counter 1 interrupt	*/
	ISR HwCnt1Int {
		CATEGORY = 1;
		ENTRY = 152;	/* ATU81 OSI8A */
		PRIORITY = 5;
	};

	/* System timer interrupt */
	ISR SysTimerInt {
		CATEGORY = 2;
		ENTRY = 188;	/* CMT0 */
		PRIORITY = 4;
	};

	/* Sample counter source interrupt */
	ISR CounterInt {
		CATEGORY = 2;
		ENTRY = 192;	/* CMT1 */
		PRIORITY = 3;
	};

	/* HW counter 2 interrupt */
	ISR HwCnt2Int {
		CATEGORY = 2;
		ENTRY = 156;	/* ATU82 OSI8E */
		PRIORITY = 2;
		RESOURCE = IntLevelRes;
	};

	/*
	 *  Resource definition
	 */
	/* Task and task resource	*/
	RESOURCE TskLevelRes {
		RESOURCEPROPERTY = STANDARD;
	};

	/* Task and interrupt resources	*/
	RESOURCE IntLevelRes {
		RESOURCEPROPERTY = STANDARD;
	};

	/* Internal resources for group tasks	*/
	RESOURCE GroupRes {
		RESOURCEPROPERTY = INTERNAL;
	};

	/*
	 *  Event definition
	 */
	/* Main task cycle event	*/
	EVENT MainEvt {
		MASK = AUTO;
	};

	/* Event for parallel execution Task2	*/
	EVENT T2Evt {
		MASK = AUTO;
	};

	/* Event for parallel execution Task3	*/
	EVENT T3Evt {
		MASK = AUTO;
	};

	/*
	 *  Counter definition
	 */
	/* System timer counter */
	COUNTER SysTimerCnt { 
		MINCYCLE = 1;
		MAXALLOWEDVALUE = 999; 
		TICKSPERBASE = 1; 
	};

	/* Sample counter */
	COUNTER SampleCnt { 
		MINCYCLE = 10;
		MAXALLOWEDVALUE = 99; 
		TICKSPERBASE = 10; 
	};

	/*
	 *  Alarm definition
	 */
	/* Main task cycle alarm */
	ALARM MainCycArm { 
		COUNTER = SysTimerCnt;
		ACTION  = SETEVENT {
			TASK = MainTask;
			EVENT = MainEvt;
		};
		AUTOSTART = TRUE {
			APPMODE = AppMode1;
			APPMODE = AppMode2;
			APPMODE = AppMode3;
			ALARMTIME = 100; 
			CYCLETIME = 100;
		};
	};

	/* Task activation alarm */
	ALARM ActTskArm { 
		COUNTER = SysTimerCnt;
		ACTION  = ACTIVATETASK {
			TASK = Task1;
		};
		AUTOSTART = FALSE;
	};

	/* Event setting alarm */
	ALARM SetEvtArm { 
		COUNTER = SysTimerCnt;
		ACTION  = SETEVENT {
			TASK = Task3;
			EVENT = T3Evt;
		};
		AUTOSTART = FALSE;
	};

	/* Callback execution alarm */
	ALARM CallBackArm { 
		COUNTER = SysTimerCnt;
		ACTION  = ALARMCALLBACK {
			ALARMCALLBACKNAME = "SysTimerAlmCb";
		};
		AUTOSTART = FALSE;
	};

	/* Sample counter operation confirmation alarm */
	ALARM SampleArm { 
		COUNTER = SampleCnt;
		ACTION  = ALARMCALLBACK {
			ALARMCALLBACKNAME = "SampleAlmCb";
		};
		AUTOSTART = TRUE {
			APPMODE = AppMode1;
			APPMODE = AppMode2;
			APPMODE = AppMode3;
			ALARMTIME = 10; 
			CYCLETIME = 10;
		};
	};

};

